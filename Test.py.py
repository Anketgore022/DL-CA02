# -*- coding: utf-8 -*-
"""Untitled32.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vp7Y6g66OWvOWcjHP2JIJ0LW6pB_4aCH
"""

import torch
from sklearn.metrics import balanced_accuracy_score
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.feature_selection import VarianceThreshold
import joblib

def bal_acc(model_path, test_x, test_y):
    # saved components
    checkpoint = torch.load(model_path)
    preprocessor = checkpoint['preprocessor']
    selector = checkpoint['selector']
    class_weights = checkpoint['class_weights']

    # Initialize model
    model = IncomePredictor(checkpoint['input_dim'])
    model.load_state_dict(checkpoint['state_dict'])

    # Preprocess test data identically
    test_processed = preprocessor.transform(test_x)
    test_reduced = selector.transform(test_processed)
    test_tensor = torch.tensor(test_reduced, dtype=torch.float32)

    # Predict
    model.eval()
    with torch.no_grad():
        outputs = model(test_tensor)
        preds = torch.argmax(outputs, dim=1)

    return balanced_accuracy_score(test_y, preds.numpy())